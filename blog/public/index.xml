<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gilfoyle Blogs</title>
    <link>https://songyintao.github.io/</link>
    <description>Recent content on Gilfoyle Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2018–2018, @Gilfoyle</copyright>
    <lastBuildDate>Sun, 25 Nov 2018 21:23:18 +0800</lastBuildDate>
    
	<atom:link href="https://songyintao.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go基础：顺序编程</title>
      <link>https://songyintao.github.io/post/go%E5%9F%BA%E7%A1%80%E9%A1%BA%E5%BA%8F%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Sun, 25 Nov 2018 21:23:18 +0800</pubDate>
      
      <guid>https://songyintao.github.io/post/go%E5%9F%BA%E7%A1%80%E9%A1%BA%E5%BA%8F%E7%BC%96%E7%A8%8B/</guid>
      <description>变量 //变量声明 var v1 int var v2 string var v3 [10]int //array var v4 []int //slice var v5 struct{ f int } var v6 *int //pointer var v7 map[string]int //map,key:string ,value:int var v8 func(a int) int var( v1 int v2 string ) //变量初始化 var v1 int=10 var v2 =10 v3:=10 //变量赋值 var v10 int v10=123 i,j=j,i  常量 //字面常量：程序中硬编码的常量 -12 &amp;quot;foo&amp;quot; true //常量定义 const pi float64=3.1415124141 const zero=0.0 const( size int64 =1024 eof=-1 ) const u,v float32=0,3 const a,b,c=3,4,&amp;quot;foo&amp;quot; //常量定义的右值可以是一个在编译期运算的常量表达式： const mask =1&amp;lt;&amp;lt;3 // 注意：常量的赋值是一个编译期行为，所以 值不能出现任何需要 行期才能得出结果的表达式 //预定义常量 Go语言预定义了这些常量：true、false、iota。iota在每一个const关键字出现时重置为0，然后在下一次const出现之前，每出现一次iota，其代表的数字会自动增1.</description>
    </item>
    
    <item>
      <title>Go基础：面向对象编程</title>
      <link>https://songyintao.github.io/post/go%E5%9F%BA%E7%A1%80%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Sun, 25 Nov 2018 21:18:46 +0800</pubDate>
      
      <guid>https://songyintao.github.io/post/go%E5%9F%BA%E7%A1%80%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</guid>
      <description>如果想要改变变量的值，只能传递指针。
类型系统 1.值语意、引用语义 ​ 值语意：
b=a b.Modify()  如果b的修改不会影响a的值，那么这个类型属于值类型。如果会影响a的值，那么此类型为引用类型。
2.结构体 type Rect struct{ x,y float64 width,height float64 } //define a member method to cal area func (r *Rect) Area() float64{ return r.width*r.height }  3.初始化 rect1:= new (Rect) rect2:=&amp;amp;Rect{} rect3:=&amp;amp;Rect{0,0,100,200} rect4:=&amp;amp;Rect{width:100,heigth:200} func NewRect(x,y,width,height float)  4. 匿名组合 type X struct{ Name string } type Y struct{ X *log.Logger NNN string }  接口 1. 接口查询 var file Writer=... if file5,ok:=file1.</description>
    </item>
    
  </channel>
</rss>